---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 52.1.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 1m
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
  values:
    alertmanager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeApiServer:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeDns:
      enabled: false
    coreDns:
      enabled: false
    kubeProxy:
      enabled: false
    kubeScheduler:
      enabled: false
    kube-state-metrics:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: NotIn
                values:
                - "true"
    prometheusOperator:
      enabled: true
      image:
        repository: prometheus-operator/prometheus-operator
        tag: "v0.68.0"
      logLevel: error
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: NotIn
                values:
                - "true"
    prometheus-node-exporter:
      image:
          repository: prometheus/node-exporter
          tag: "v1.6.1"
    prometheus:
      prometheusSpec:
        image:
          repository: prometheus/prometheus
          tag: "v2.47.2"
        logLevel: error
        retention: 15d
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/master
                  operator: NotIn
                  values:
                  - "true"
        resources:
          requests:
            cpu: 1000m
            memory: 2048Mi
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: "nfs-client"
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 50Gi
        podMonitorSelector:
          matchLabels:
            app.kubernetes.io/part-of: flux
    grafana:
      image:
        repository: "grafana/grafana"
        tag: "10.1.2"
      sidecar:
        dashboards:
          searchNamespace: ALL
      adminUser: ${SECRET_GRAFANA_ADMIN_USERNAME}
      adminPassword: ${SECRET_GRAFANA_ADMIN_PASSWORD}
      grafana.ini:
        log:
          mode: console
          level: error
      persistence:
        enabled: true
        storageClassName: "nfs-client"
        size: 1Gi
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: NotIn
                values:
                - "true"
      ingress:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - "monitoring.${SECRET_DOMAIN}"
        tls:
          - secretName: monitoring-tls-secret
            hosts:
              - "monitoring.${SECRET_DOMAIN}"
