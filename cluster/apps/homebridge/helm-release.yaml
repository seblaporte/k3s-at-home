---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: homebridge
  namespace: homebridge
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: homebridge
      version: 5.3.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    env:
      # -- To interact with the self-signed certificate with local Tydom
      NODE_TLS_REJECT_UNAUTHORIZED: 0
      # -- Set the container timezone
      TZ: UTC
      # -- Specify the user ID the application will run as
      PUID: "1000"
      # -- Specify the group ID the application will run as
      PGID: "1000"
      # -- Enable the Homebridge UI
      HOMEBRIDGE_CONFIG_UI: 1
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - host: "homebridge.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: 8581
        tls:
          - hosts:
              - "homebridge.${SECRET_DOMAIN}"
            secretName: homebridge-tls-secret
    persistence:
      config:
        enabled: true
        storageClass: "nfs-client"
        accessMode: "ReadWriteOnce"
        mountPath: /homebridge
        size: "1Gi"
    configmap:
      scripts:
        enabled: true
        data:
          startup.sh: |
            #!/bin/sh
            #
            # Docker Homebridge Custom Startup Script - oznu/homebridge
            #
            # This script can be used to customise the environment and will be executed as
            # the root user each time the container starts.
            #
            # If using this to install plugins DO NOT use the global flag (-g).
            #
            npm install homebridge-tydom
            echo "Started successfully."
    resources:
      requests:
        memory: 250Mi
        cpu: 500m
      limits:
        memory: 500Mi
        cpu: 1000m
