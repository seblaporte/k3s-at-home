---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: appflowy-cloud
  namespace: appflowy-cloud
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 2.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-helm-charts
        namespace: flux-system
      interval: 15m
  values:
    defaultPodOptions:
      hostNetwork: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: NotIn
                values:
                - "true"
    controllers:
      main:
        containers:
          main:
            image:
              repository: appflowyinc/appflowy_cloud
              tag: "0.9.99"
              pullPolicy: IfNotPresent
            env:
              - name: RUST_LOG
                value: info
              - name: APPFLOWY_ENVIRONMENT
                value: production
              - name: APPFLOWY_DATABASE_URL
                value: postgres://appflowy:${SECRET_APPFLOWY_DB_PASSWORD}@${NAS_ADDR}:${POSTGRES_PORT}/appflowy
              - name: APPFLOWY_REDIS_URI
                value: redis://redis.appflowy-cloud.svc.cluster.local:6379
              - name: APPFLOWY_GOTRUE_JWT_SECRET
                value: ${SECRET_APPFLOWY_GOTRUE_JWT_SECRET}
              - name: APPFLOWY_GOTRUE_JWT_EXP
                value: "7200"
              - name: APPFLOWY_GOTRUE_BASE_URL
                value: http://gotrue.appflowy-cloud.svc.cluster.local:9999
              - name: APPFLOWY_S3_CREATE_BUCKET
                value: "false"
              - name: APPFLOWY_S3_USE_MINIO
                value: "true"
              - name: APPFLOWY_S3_MINIO_URL
                value: http://${SVC_MINIO_ADDR}:9000
              - name: APPFLOWY_S3_ACCESS_KEY
                value: ${SECRET_APPFLOWY_S3_ACCESS_KEY}
              - name: APPFLOWY_S3_SECRET_KEY
                value: ${SECRET_APPFLOWY_S3_SECRET_KEY}
              - name: APPFLOWY_S3_BUCKET
                value: appflowy
              - name: APPFLOWY_S3_REGION
                value: ${SECRET_APPFLOWY_S3_REGION}
              - name: APPFLOWY_S3_PRESIGNED_URL_ENDPOINT
                value: https://minio.${SECRET_DOMAIN}
              - name: APPFLOWY_ACCESS_CONTROL
                value: "true"
              - name: APPFLOWY_DATABASE_MAX_CONNECTIONS
                value: "40"
              - name: AI_SERVER_HOST
                value: ai.appflowy-cloud.svc.cluster.local
              - name: AI_SERVER_PORT
                value: "5001"
              - name: AI_OPENAI_API_KEY
                value: ${SECRET_AI_OPENAI_API_KEY}
              - name: APPFLOWY_WEB_URL
                value: https://appflowy-cloud.${SECRET_DOMAIN}
            resources:
              requests:
                memory: 128Mi
                cpu: 100m
              limits:
                memory: 256Mi
                cpu: 200m
      redis:
        containers:
          main:
            image:
              repository: redis
              tag: "8.0.3"
              pullPolicy: IfNotPresent
            resources:
              requests:
                memory: 64Mi
                cpu: 50m
              limits:
                memory: 128Mi
                cpu: 100m
      gotrue:
        containers:
          main:
            image:
              repository: appflowyinc/gotrue
              tag: "0.9.100"
              pullPolicy: IfNotPresent
            env:
              - name: GOTRUE_DB_DRIVER
                value: postgres
            resources:
              requests:
                memory: 64Mi
                cpu: 50m
              limits:
                memory: 128Mi
                cpu: 100m
      admin-frontend:
        containers:
          main:
            image:
              repository: appflowyinc/admin_frontend
              tag: "0.9.64"
              pullPolicy: IfNotPresent
            env:
              - name: ADMIN_FRONTEND_REDIS_URL
                value: redis://redis.appflowy-cloud.svc.cluster.local:6379
              - name: ADMIN_FRONTEND_GOTRUE_URL
                value: http://gotrue.appflowy-cloud.svc.cluster.local:9999
              - name: ADMIN_FRONTEND_APPFLOWY_CLOUD_URL
                value: http://main.appflowy-cloud.svc.cluster.local:8000
              - name: ADMIN_FRONTEND_PATH_PREFIX
                value: /console
            resources:
              requests:
                memory: 64Mi
                cpu: 50m
              limits:
                memory: 256Mi
                cpu: 200m
      ai:
        containers:
          main:
            image:
              repository: appflowyinc/appflowy_ai
              tag: "0.9.100"
              pullPolicy: IfNotPresent
            env:
              - name: OPENAI_API_KEY
                value: ${SECRET_APPFLOWY_OPENAI_API_KEY}
              - name: APPFLOWY_AI_SERVER_PORT
                value: "5001"
              - name: APPFLOWY_AI_DATABASE_URL
                value: postgresql+psycopg://appflowy:${SECRET_APPFLOWY_DB_PASSWORD}@${NAS_ADDR}:${POSTGRES_PORT}/appflowy
              - name: APPFLOWY_AI_REDIS_URL
                value: redis://redis.appflowy-cloud.svc.cluster.local:6379
            resources:
              requests:
                memory: 64Mi
                cpu: 50m
              limits:
                memory: 256Mi
                cpu: 200m
      worker:
        containers:
          main:
            image:
              repository: appflowyinc/appflowy_worker
              tag: "0.9.100"
              pullPolicy: IfNotPresent
            env:
              - name: RUST_LOG
                value: info
              - name: APPFLOWY_ENVIRONMENT
                value: production
              - name: APPFLOWY_WORKER_REDIS_URL
                value: redis://redis.appflowy-cloud.svc.cluster.local:6379
              - name: APPFLOWY_WORKER_ENVIRONMENT
                value: production
              - name: APPFLOWY_WORKER_DATABASE_URL
                value: postgres://appflowy:${SECRET_APPFLOWY_DB_PASSWORD}@${NAS_ADDR}:${POSTGRES_PORT}/appflowy
              - name: APPFLOWY_WORKER_DATABASE_NAME
                value: appflowy
              - name: APPFLOWY_WORKER_IMPORT_TICK_INTERVAL
                value: "30"
              - name: APPFLOWY_S3_USE_MINIO
                value: "true"
              - name: APPFLOWY_S3_MINIO_URL
                value: http://${SVC_MINIO_ADDR}:9000
              - name: APPFLOWY_S3_ACCESS_KEY
                value: ${SECRET_APPFLOWY_S3_ACCESS_KEY}
              - name: APPFLOWY_S3_SECRET_KEY
                value: ${SECRET_APPFLOWY_S3_SECRET_KEY}
              - name: APPFLOWY_S3_BUCKET
                value: appflowy
              - name: APPFLOWY_S3_REGION
                value: ${SECRET_APPFLOWY_S3_REGION}
            resources:
              requests:
                memory: 64Mi
                cpu: 50m
              limits:
                memory: 256Mi
                cpu: 200m
      web:
        containers:
          main:
            image:
              repository: appflowyinc/appflowy_web
              tag: "0.9.99"
              pullPolicy: IfNotPresent
            resources:
              requests:
                memory: 64Mi
                cpu: 50m
              limits:
                memory: 256Mi
                cpu: 200m
    service:
      main:
        enabled: true
        controller: web
        ports:
          http:
            enabled: true
            port: 8000
            protocol: TCP
      redis:
        enabled: true
        controller: redis
        ports:
          http:
            enabled: true
            port: 6379
            protocol: TCP
      gotrue:
        enabled: true
        controller: gotrue
        ports:
          http:
            enabled: true
            port: 9999
            protocol: TCP
      admin-frontend:
        enabled: true
        controller: admin-frontend
        ports:
          http:
            enabled: true
            port: 3000
            protocol: TCP
      ai:
        enabled: true
        controller: ai
        ports:
          http:
            enabled: true
            port: 5001
            protocol: TCP
      web:
        enabled: true
        controller: web
        ports:
          http:
            enabled: true
            port: 80
            protocol: TCP
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - host: "appflowy-cloud.${SECRET_DOMAIN}"
            paths:
              - path: /gotrue
                pathType: Prefix
                service:
                  name: gotrue
              - path: /ws
                pathType: Prefix
                service:
                  name: main
              - path: /api
                pathType: Prefix
                service:
                  name: main
              - path: /console
                pathType: Prefix
                service:
                  name: admin-frontend
              - path: /
                pathType: Prefix
                service:
                  name: web
        tls:
          - hosts:
              - "appflowy-cloud.${SECRET_DOMAIN}"
            secretName: appflowy-cloud-tls-secret
