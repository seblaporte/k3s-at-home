blueprint:
  name: Thermostat TPI
  description: Thermostat TPI (Time Propertional & Integral)
  domain: automation

  input:
    coeff_c:
      name: Coefficient C
      description: Coefficient multiplicateur de la différence entre la consigne et la température intérieure pour le calcul de la puissance (0.6 conseillé)
      selector:
        number:
          min: 0.0
          max: 1.0
          step: 0.01
    coeff_t:
      name: Coefficient T
      description: Coefficient multiplicateur de la différence entre la consigne et la température extérieure pour le calcul de la puissance (0.01 conseillé)
      selector:
        number:
          min: 0.0
          max: 0.1
          step: 0.001
    entity_consigne:
      name: Consigne
      description: Champs d'entrée de la température de consigne (input number).
      selector:
        entity:
          domain: input_number
    entity_temp_ext:
      name: Température extérieure
      description: Sonde de mesure de la température extérieure
      selector:
        entity:
          domain: sensor
          device_class: temperature
    entity_temp_int:
      name: Température intérieure
      description: Sonde de mesure de la température intérieure
      selector:
        entity:
          domain: sensor
          device_class: temperature
    entity_puissance:
      name: Puissance
      description: Champs d'affichage de la puissance
      selector:
        entity:
          domain: input_number
    entity_chauffage:
      name: Chauffage
      description: Interrupteur marche / arrêt du chauffage
      selector:
        entity:
          domain: switch
    entity_chauffage_2:
      name: Chauffage 2 (optionnel)
      description: Interrupteur marche / arrêt du chauffage numero 2
      default: {}
      selector:
        entity:
          domain: switch

# Récupération des paramètres
variables:
  coeff_c: !input coeff_c
  coeff_t: !input coeff_t
  entity_temp_int: !input entity_temp_int
  entity_temp_ext: !input entity_temp_ext

trigger:
  - platform: time_pattern
    minutes: "/10"
  - platform: state
    entity_id: !input entity_consigne

action:
  - alias: Récupération des données
    variables:
      entity_consigne: !input entity_consigne
      entity_chauffage_2: !input entity_chauffage_2
      consigne: "{{ states(entity_consigne) }}"
      temp_ext: '{{ states(entity_temp_ext) }}'
      temp_int: '{{ states(entity_temp_int) }}'
      chauffage_2_exists: '{{ entity_chauffage_2 != {} }}'
      puissance: >-
        {% set val = coeff_c * (consigne - temp_int) + coeff_t * (consigne - temp_ext) %}
        {% if val > 1 %} {% set val = 100 %}
        {% elif val < 0 %} {% set val = 0 %}
        {% else %} {% set val = ( (val * 100) | round(0) ) %}
        {% endif %} {{val}}
      temps_chauffe: '{{ puissance * 6 }}'
  - alias: Mise à jour l'indicateur de puissance
    service: input_number.set_value
    target:
      entity_id: !input entity_puissance
    data:
      value: '{{ puissance }}'  
  - alias: Commande du chauffage
    choose:
      - conditions:
          - condition: template
            value_template: '{{ puissance == 0 }}'
        # Eteins le chauffage pour toute la periode
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input entity_chauffage
      - conditions:
          - condition: template
            value_template: '{{ puissance > 99}}'
        # Allume le chauffage pour toute la periode
        sequence:
          - service: switch.turn_off
            target:
              entity_id: !input entity_chauffage
    default:
      # Allume le chauffage
      - service: switch.turn_off
        target:
          entity_id: !input entity_chauffage
      # pendant la duree calculee
      - delay: '{{ temps_chauffe }}'
      # puis eteins le reste de la periode
      - service: switch.turn_on
        target:
          entity_id: !input entity_chauffage
  - alias: Commande du chauffage 2 (si configure)
    condition: "{{ chauffage_2_exists }}"
    choose:
      - conditions:
          - condition: template
            value_template: '{{ puissance == 0 }}'
        # Eteins le chauffage 2 pour toute la periode
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input entity_chauffage_2
      - conditions:
          - condition: template
            value_template: '{{ puissance > 99}}'
        # Allume le chauffage 2 pour toute la periode
        sequence:
          - service: switch.turn_off
            target:
              entity_id: !input entity_chauffage_2
    default:
      # Allume le chauffage 2
      - service: switch.turn_off
        target:
          entity_id: !input entity_chauffage_2
      # pendant la duree calculee
      - delay: '{{ temps_chauffe }}'
      # puis eteins le reste de la periode
      - service: switch.turn_on
        target:
          entity_id: !input entity_chauffage_2
mode: restart