---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki-stack
  namespace: log-management
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: loki-stack
      version: 2.9.11
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 1m
  values:
    loki:
      persistence:
        enabled: true
        accessModes:
        - ReadWriteOnce
        size: 20Gi
        storageClassName: "synology-iscsi-storage"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: NotIn
                values:
                - "true"
      extraArgs:
        log.level: error
    promtail:
      enabled: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: NotIn
                values:
                - "true"
    grafana:
      enabled: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: NotIn
                values:
                - "true"
      persistence:
        enabled: true
        storageClassName: "nfs-client"
        size: 1Gi
      env:
        GF_AUTH_ANONYMOUS_ENABLED: true
        GF_ANALYTICS_REPORTING_ENABLED: false
        GF_SECURITY_DISABLE_GRAVATAR: true
        GF_USERS_ALLOW_SIGN_UP: false
      adminUser: ${SECRET_GRAFANA_ADMIN_USERNAME}
      adminPassword: ${SECRET_GRAFANA_ADMIN_PASSWORD}
      sidecar:
        datasources:
          enabled: true
      ingress:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-traefik-forward-auth@kubernetescrd
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - "logs.${SECRET_DOMAIN}"
        tls:
          - secretName: logs-tls-secret
            hosts:
              - "logs.${SECRET_DOMAIN}"
