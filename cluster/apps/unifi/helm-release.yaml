---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: unifi
  namespace: unifi
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 2.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-helm-charts
        namespace: flux-system
      interval: 15m
  values:
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: NotIn
                values:
                - "true"
    controllers:
      main:
        containers:
          main:
            image:
              repository: linuxserver/unifi-network-application
              tag: "8.0.24"
              pullPolicy: IfNotPresent
            env:
              TZ: Europe/Paris
              PUID: 1000
              PGID: 1000
              MONGO_USER: unifi
              MONGO_PASS: ${SECRET_UNIFI_DB_PASSWORD}
              MONGO_HOST: unifi-mongo.unifi.svc.cluster.local
              MONGO_PORT: 27017
              MONGO_DBNAME: unifi
            resources:
              requests:
                memory: 1024Mi
                cpu: 1000m
              limits:
                memory: 2048Mi
                cpu: 2000m
      db:
        type: statefulset
        statefulset:
          podManagementPolicy: OrderedReady
        containers:
          main:
            image:
              repository: arm64v8/mongo
              tag: "4.4-focal"
              pullPolicy: IfNotPresent
            env:
              TZ: Europe/Paris
            resources:
              requests:
                memory: 1024Mi
                cpu: 1000m
              limits:
                memory: 2048Mi
                cpu: 2000m
    secrets:
      secret:
        enabled: true
        stringData:
          init-mongo.js: |-
            db.getSiblingDB("unifi").createUser({user: "unifi", pwd: "${SECRET_UNIFI_DB_PASSWORD}", roles: [{role: "dbOwner", db: "unifi"}]});
            db.getSiblingDB("unifi_stat").createUser({user: "unifi", pwd: "${SECRET_UNIFI_DB_PASSWORD}", roles: [{role: "dbOwner", db: "unifi_stat"}]});
    service:
      main:
        enabled: true
        controller: main
        type: LoadBalancer
        loadBalancerIP: "${SVC_UNIFI_ADDR}"
        externalTrafficPolicy: Local
        annotations:
          metallb.universe.tf/allow-shared-ip: "unifi-controller"
        ports:
          http:
            enabled: true
            port: 8080
            protocol: HTTP
          https:
            enabled: true
            port: 8443
            protocol: HTTP
          speed-test:
            enabled: true
            port: 6789
            protocol: HTTP
      udp:
        enabled: true
        controller: main
        type: LoadBalancer
        loadBalancerIP: "${SVC_UNIFI_ADDR}"
        externalTrafficPolicy: Local
        annotations:
          metallb.universe.tf/allow-shared-ip: "unifi-controller"
        ports:
          stun:
            enabled: true
            port: 3478
            protocol: UDP
          syslog:
            enabled: true
            port: 5514
            protocol: UDP
          discovery:
            enabled: true
            port: 10001
            protocol: UDP
          l2-discovery:
            enabled: true
            port: 1900
            protocol: UDP
      mongo:
        enabled: true
        controller: db
        type: ClusterIP
        ports:
          http:
            enabled: false
          mongo:
            enabled: true
            port: 27017
            protocol: TCP
    persistence:
      config:
        enabled: true
        storageClass: "nfs-client"
        accessMode: "ReadWriteOnce"
        size: "1Gi"
        advancedMounts:
          main:
            main:
              - path: /config
      db:
        enabled: true
        storageClass: "synology-iscsi-storage"
        accessMode: "ReadWriteOnce"
        size: "10Gi"
        advancedMounts:
          db:
            main:
              - path: /data/db